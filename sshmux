#!/bin/bash
set -euo pipefail

read_tmux_session_name() {
    ARGS=""
    
    while [[ $# > 0 ]]
    do
    key="$1"
    
    case $key in
        -t|--target)
        export T_ARG="$2"
        shift # past argument
        ;;
        -v|--verbose)
        ARGS="$ARGS $1"
        export SSHMUX_VERBOSE=true
        ;;
        *)
        ARGS="$ARGS $1"
                # unknown option
        ;;
    esac
    shift # past argument or value
    done
    export SSHMUX_ARGS=$ARGS
}

T_ARG=""
SSHMUX_VERBOSE=""
SSHMUX_ARGS=""
read_tmux_session_name "$@"
echo $SSHMUX_ARGS
if [ -z $T_ARG ]; then
    export T_ARG=default
fi

RETRY_IN=1
LAST_FAIL_TIME=`date +%s`
while ! ssh $SSHMUX_ARGS -o ConnectTimeout=0 -o ServerAliveInterval=3 -o ServerAliveCountmax=2 -t "tmux attach -t $T_ARG || tmux new -s $T_ARG" 2>/tmp/.sshmux_log
do
    tput cup 0 0
    tput el
    tput el1
    
    CURRENT_TIME=`date +%s`
    if [ $(($LAST_FAIL_TIME + $RETRY_IN / 2 + 5)) -lt $CURRENT_TIME ]; then # we have succeeded since the last failure
        LAST_FAIL_TIME=$CURRENT_TIME
        RETRY_IN=1
    fi

    python -c 'import datetime; import sys; sys.stdout.write(
        "\033[94m%s: Connection lost: retrying in %d seconds (Press enter to try again now)\033[0m\r" % 
            (datetime.datetime.now().strftime("%H:%M.%S"), '$RETRY_IN'))'

    if [ $SSHMUX_VERBOSE ]; then
        echo ''
        cat /tmp/.sshmux_log
    fi
    
    read -t $RETRY_IN || true
    RETRY_IN=$(($RETRY_IN*2))
done
